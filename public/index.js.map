{"version":3,"file":"index.js","sources":["../src/controller.js","../src/routes.js","../src/docs.js","../src/index.js"],"sourcesContent":["const queryString = require('query-string');\r\n\r\nconst transformToTernary = (obj) => {\r\n  let ternaryObject = obj;\r\n\r\n  if (!('@m_result' in obj)) {\r\n    ternaryObject = {\r\n      '@m_result': obj,\r\n      '@m_docs': {\r\n        merged: {},\r\n        objs: []\r\n      }\r\n    };\r\n  }\r\n\r\n  return ternaryObject;\r\n};\r\n\r\nconst getObj = (iftrueTernary, iffalseTernary) => {\r\n  let result;\r\n  if (!iftrueTernary['@m_docs'].objs.length && !iffalseTernary['@m_docs'].objs.length) {\r\n    result = [].concat(iftrueTernary['@m_result'], iffalseTernary['@m_result']);\r\n  } else if (!iftrueTernary['@m_docs'].objs.length) {\r\n    result = [].concat(iftrueTernary['@m_result'], iffalseTernary['@m_docs'].objs);\r\n  } else if (!iffalseTernary['@m_docs'].objs.length) {\r\n    result = [].concat(iffalseTernary['@m_result'], iftrueTernary['@m_docs'].objs);\r\n  } else {\r\n    result = [].concat(iftrueTernary['@m_docs'].objs, iffalseTernary['@m_docs'].objs);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst getHostQuery = (req) => {\r\n  let hostQuery;\r\n  const host = req.headers.referer || req.url;\r\n  const index = host.indexOf('?');\r\n\r\n  if (hostQuery === -1) {\r\n    hostQuery = {};\r\n  } else {\r\n    const formatedHost = host.slice(index);\r\n    hostQuery = queryString.parse(formatedHost);\r\n  }\r\n\r\n  return hostQuery;\r\n};\r\n\r\nexport const ternary = ({ condition, iftrue, iffalse }) => {\r\n  const iftrueTernary = transformToTernary(iftrue);\r\n  const iffalseTernary = transformToTernary(iffalse);\r\n\r\n  const result = condition ? iftrueTernary['@m_result'] : iffalseTernary['@m_result'];\r\n  const merged = Object.assign({}, iftrueTernary['@m_result'], iffalseTernary['@m_result'], iftrueTernary['@m_docs'].merged, iffalseTernary['@m_docs'].merged);\r\n  const objs = getObj(iftrueTernary, iffalseTernary);\r\n\r\n  return {\r\n    '@m_result': result,\r\n    '@m_docs': {\r\n      merged,\r\n      objs\r\n    }\r\n  };\r\n};\r\n\r\nexport default (customContoller, delay) => (req, res) => {\r\n  const typeofCustomController = typeof customContoller;\r\n  let response = {};\r\n\r\n  if (typeofCustomController === 'function') {\r\n    const { body, params, query } = req;\r\n\r\n    const hostQuery = getHostQuery(req);\r\n\r\n    const data = {\r\n      body,\r\n      params,\r\n      query,\r\n      hostQuery\r\n    };\r\n\r\n    const result = customContoller(data, req, res);\r\n    response = '@m_result' in result ? result['@m_result'] : result;\r\n  } else if (typeofCustomController === 'object' && !Array.isArray(customContoller)) {\r\n    response = customContoller;\r\n  } else {\r\n    throw new Error(`Unacceptable type of controller: ${typeofCustomController}. It must be 'object' or 'function'.`);\r\n  }\r\n\r\n  setTimeout(() => res.json(response), delay);\r\n};\r\n","import controllerProvider from './controller';\r\n\r\nconst Router = require('express').Router();\r\n\r\nRouter.use((req, res, next) => {\r\n  res.header('Access-Control-Allow-Origin', '*');\r\n  res.header('Access-Control-Allow-Headers', 'X-Requested-With');\r\n  next();\r\n});\r\n\r\nexport default (routes) => {\r\n  routes.forEach((route) => {\r\n    const formatedMethod = route.method.toLowerCase();\r\n\r\n    const controller = route.controller || route.json;\r\n    const delay = route.delay || 0;\r\n\r\n    try {\r\n      Router[formatedMethod](route.url, controllerProvider(controller, delay));\r\n    } catch (e) {\r\n      throw new Error(`${formatedMethod} is a wrong method`);\r\n    }\r\n  });\r\n\r\n  return Router;\r\n};\r\n","function parseObject(obj) {\r\n  const parsedObject = {};\r\n  Object.keys(obj).forEach((key) => {\r\n    const value = obj[key];\r\n    let type = typeof value;\r\n\r\n    if (Array.isArray(value)) {\r\n      type = parseArray(value); // eslint-disable-line\r\n    } else if (value === null) {\r\n      type = 'null';\r\n    } else if (type === 'object') {\r\n      type = parseObject(value);\r\n    }\r\n\r\n    parsedObject[key] = type;\r\n  });\r\n\r\n  return parsedObject;\r\n}\r\n\r\nfunction parseArray(arr) {\r\n  let parsedArray;\r\n  const firstItem = arr[0];\r\n\r\n  if (!firstItem) {\r\n    parsedArray = '[]';\r\n  } else if (Array.isArray(firstItem)) {\r\n    parsedArray = `${parseArray(firstItem)}[]`;\r\n  } else if (typeof firstItem === 'object') {\r\n    parsedArray = [parseObject(firstItem)];\r\n  } else {\r\n    parsedArray = `${typeof firstItem}[]`;\r\n  }\r\n\r\n  return parsedArray;\r\n}\r\n\r\nconst isPropMandatory = (types, matches, possibleMatches) => {\r\n  let isMandatory = false;\r\n\r\n  if (types.includes('null') || types.includes('undefined')) {\r\n    isMandatory = false;\r\n  } else if (matches === possibleMatches) {\r\n    isMandatory = true;\r\n  }\r\n\r\n  return isMandatory;\r\n};\r\n\r\nconst getMandatoryFlag = ({\r\n  types,\r\n  matches,\r\n  possibleMatches,\r\n  flagIfYes,\r\n  flagIfNo\r\n}) => (isPropMandatory(types, matches, possibleMatches) ? flagIfYes : flagIfNo);\r\n\r\nconst findTypesObjects = types => types.filter(type => typeof type === 'object');\r\nconst findTypesNoObjects = types => types.filter(type => typeof type !== 'object');\r\n\r\nconst generateTypesWithMergedObjects = (types) => {\r\n  const typesObjects = findTypesObjects(types);\r\n  let typesWithMergedObjects = types;\r\n\r\n  if (typesObjects.length > 1) {\r\n    const merged = Object.assign({}, ...typesObjects);\r\n\r\n    const JSONFromTernary = getJSONFromTernary({ // eslint-disable-line\r\n      objs: typesObjects,\r\n      merged\r\n    });\r\n\r\n    typesWithMergedObjects = [].concat(findTypesNoObjects(types), JSONFromTernary);\r\n  }\r\n\r\n  return typesWithMergedObjects;\r\n};\r\n\r\nconst generateJSONValue = (types) => {\r\n  let JSONValue = '';\r\n\r\n  const typesWithMergedObject = generateTypesWithMergedObjects(types);\r\n\r\n  const typesWithoutNullAndUndef = typesWithMergedObject.filter(type => type !== 'undefined' && type !== 'null');\r\n\r\n  typesWithoutNullAndUndef.forEach((item, index) => {\r\n    if (typeof item === 'object') {\r\n      JSONValue += `${JSON.stringify(item, null, 2)}`;\r\n    } else {\r\n      JSONValue += `${item}`;\r\n    }\r\n\r\n    if (index < typesWithoutNullAndUndef.length - 1) JSONValue += ' | ';\r\n  });\r\n\r\n  return JSONValue;\r\n};\r\n\r\nconst parseStringifiedObject = (stringifiedObject) => {\r\n  const parsedObject = {};\r\n  Object.keys(stringifiedObject).forEach((key) => {\r\n    const value = stringifiedObject[key];\r\n\r\n    const type = typeof value;\r\n\r\n    if (type === 'string') {\r\n      try {\r\n        const parsed = JSON.parse(value);\r\n        if (typeof parsed === 'object') {\r\n          parsedObject[key] = parseStringifiedObject(parsed);\r\n        } else {\r\n          parsedObject[key] = value;\r\n        }\r\n      } catch (e) {\r\n        parsedObject[key] = value;\r\n      }\r\n    } else {\r\n      parsedObject[key] = value;\r\n    }\r\n  });\r\n\r\n  if (parsedObject[0]) return [parsedObject[0]];\r\n\r\n  return parsedObject;\r\n};\r\n\r\nfunction getJSONFromTernary(ternaryObject) {\r\n  const { merged, objs } = ternaryObject;\r\n  const mergedKeys = Object.keys(merged);\r\n\r\n  const stringifiedObject = {};\r\n\r\n  mergedKeys.forEach((key) => {\r\n    let matches = 0;\r\n    const types = [];\r\n\r\n    objs.forEach((obj) => {\r\n      if (key in obj) {\r\n        const value = obj[key];\r\n        matches += 1;\r\n        let type = typeof value;\r\n\r\n        if (Array.isArray(value)) {\r\n          type = parseArray(value);\r\n        } else if (value === null) {\r\n          type = 'null';\r\n        } else if (typeof value === 'object') {\r\n          type = parseObject(value);\r\n        }\r\n\r\n        if (!types.includes(type)) types.push(type);\r\n      }\r\n    });\r\n\r\n    const mandatoryFlag = getMandatoryFlag({\r\n      types,\r\n      matches,\r\n      possibleMatches: objs.length,\r\n      flagIfYes: '',\r\n      flagIfNo: '?'\r\n    });\r\n    const JSONKey = `${mandatoryFlag}${key}`;\r\n    const JSONValue = generateJSONValue(types);\r\n\r\n    stringifiedObject[JSONKey] = JSONValue;\r\n  });\r\n\r\n  const JSONFromTernary = parseStringifiedObject(stringifiedObject);\r\n\r\n  return JSONFromTernary;\r\n}\r\n\r\nconst getParamsFromUrl = (url) => {\r\n  const paramsFromUrl = {};\r\n  url\r\n    .split('?')[0]\r\n    .split('/')\r\n    .filter(item => item.includes(':'))\r\n    .forEach((param) => {\r\n      paramsFromUrl[param.replace(':', '')] = '';\r\n    }); // all route params are strings\r\n\r\n  return paramsFromUrl;\r\n};\r\n\r\nconst getDataFromArray = (array) => {\r\n  const data = {};\r\n  array.forEach((item) => {\r\n    data[item] = '';\r\n  });\r\n  return data;\r\n};\r\n\r\nconst getArrayOfJSON = (json) => {\r\n  const string = JSON.stringify(json, null, 2).replace(/\\\\\"/g, \"'\").replace(/\\\\n/g, `\r\n  `);\r\n\r\n  const array = string.split('\\n');\r\n\r\n  return array;\r\n};\r\n\r\nconst generateDocsFromArray = (array) => {\r\n  const docs = {\r\n    language: 'js',\r\n    content: []\r\n  };\r\n\r\n  getArrayOfJSON(array).forEach(item => docs.content.push(item));\r\n\r\n  return docs;\r\n};\r\n\r\nconst generateDocsFromObject = (response, body, hostQuery = [], queryArray = [], url = '') => {\r\n  const docs = {\r\n    language: 'js',\r\n    content: []\r\n  };\r\n\r\n  let json;\r\n\r\n  if (Array.isArray(response)) {\r\n    json = `[${parseObject(response)}]`;\r\n  } else if (typeof response === 'object') {\r\n    json = parseObject(response);\r\n  } else {\r\n    const responseJSON = response({\r\n      body,\r\n      params: getParamsFromUrl(url),\r\n      query: getDataFromArray(queryArray),\r\n      hostQuery: getDataFromArray(hostQuery)\r\n    });\r\n\r\n    if ('@m_docs' in responseJSON) {\r\n      json = getJSONFromTernary(responseJSON['@m_docs']);\r\n    } else {\r\n      json = parseObject(responseJSON);\r\n    }\r\n  }\r\n\r\n  getArrayOfJSON(json).forEach(item => docs.content.push(item));\r\n\r\n  return docs;\r\n};\r\n\r\nconst getFileName = fileName => `${fileName.toLocaleLowerCase().replace(new RegExp(' ', 'g'), '-')}.md`;\r\n\r\nexport default (route) => {\r\n  const { docs } = route;\r\n  const fileContent = [];\r\n\r\n  fileContent.push({\r\n    h1: docs.title\r\n  });\r\n\r\n  if (docs.description) {\r\n    fileContent.push({\r\n      blockquote: docs.description\r\n    });\r\n  }\r\n\r\n  fileContent.push({\r\n    h2: 'Method'\r\n  });\r\n\r\n  fileContent.push({\r\n    p: route.method.toLocaleUpperCase()\r\n  });\r\n\r\n  fileContent.push({\r\n    h2: 'URL'\r\n  });\r\n\r\n  fileContent.push({\r\n    code: {\r\n      language: 'js',\r\n      content: [route.url.split('?')[0]] // ignore query params\r\n    }\r\n  });\r\n\r\n  if (docs.hostQuery) {\r\n    fileContent.push({\r\n      h2: 'Host Query Parameters'\r\n    });\r\n    fileContent.push({\r\n      blockquote: 'For mock development'\r\n    });\r\n    fileContent.push({\r\n      code: generateDocsFromArray(docs.hostQuery)\r\n    });\r\n  }\r\n\r\n  if (docs.query) {\r\n    fileContent.push({\r\n      h2: 'Query Parameters'\r\n    });\r\n    fileContent.push({\r\n      code: generateDocsFromArray(docs.query)\r\n    });\r\n  }\r\n\r\n  if (docs.body) {\r\n    fileContent.push({\r\n      h2: 'Body'\r\n    });\r\n    fileContent.push({\r\n      code: generateDocsFromObject(docs.body)\r\n    });\r\n  }\r\n\r\n  if (route.json) {\r\n    fileContent.push({\r\n      h2: 'Response'\r\n    });\r\n    fileContent.push({\r\n      code: generateDocsFromObject(route.json)\r\n    });\r\n  } else if (route.controller) {\r\n    fileContent.push({\r\n      h2: 'Response'\r\n    });\r\n    fileContent.push({\r\n      code: generateDocsFromObject(route.controller, docs.body, docs.hostQuery, docs.query, route.url) // eslint-disable-line\r\n    });\r\n  }\r\n\r\n  const fileName = getFileName(docs.fileName || docs.title);\r\n\r\n  return {\r\n    fileName,\r\n    fileContent\r\n  };\r\n};\r\n","import createRouter from './routes';\nimport { ternary } from './controller';\nimport generateDocumentation from './docs';\n\nconst bodyParser = require('body-parser');\nconst express = require('express');\nconst morgan = require('morgan');\nconst { choosePort } = require('react-dev-utils/WebpackDevServerUtils');\nconst json2md = require('json2md');\nconst fs = require('fs');\nconst path = require('path');\nconst colors = require('colors'); // eslint-disable-line no-unused-vars\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(morgan('dev'));\n\nconst requestHeaders = {\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, PUT, POST, DELETE, OPTIONS, PATCH',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization, Content-Length, X-Requested-With, X-Redmine-API-Key, X-On-Behalf-Of'\n};\n\n/**\n* @param {Object<[key: string]: string>} headers\n* @returns void\n*/\nconst setupHeaders = (headers) => {\n  app.use((req, res, next) => {\n    if (req.method === 'OPTIONS') {\n      const headersArray = Object.keys(headers);\n\n      if (headersArray.length) {\n        headersArray.forEach((headerID) => {\n          res.header(headerID, headers[headerID]);\n        });\n      }\n\n      res.sendStatus(200);\n    } else {\n      next();\n    }\n  });\n};\n\nconst writeFiles = (url, fileContent) => {\n  fs.writeFile(url, json2md(fileContent), (err) => {\n    if (err) {\n      console.log(err.red); // eslint-disable-line no-console\n    } else {\n      console.log(`📄 ${url}`); // eslint-disable-line no-console\n    }\n  });\n};\n\nconst clearDocsFolder = (docsUrl) => {\n  try {\n    const files = fs.readdirSync(docsUrl);\n    Object.keys(files).forEach((key) => {\n      const file = files[key];\n      fs.unlinkSync(path.join(docsUrl, file));\n    });\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      console.log(`Cannot find the path: ${docsUrl}`.red); // eslint-disable-line no-console\n    } else {\n      console.log(err); // eslint-disable-line no-console\n    }\n  }\n};\n\nconst createDocs = (routes, docsUrl) => {\n  let docsFolderCleared = false;\n  routes.forEach((route) => {\n    if (route.docs) {\n      if (!docsFolderCleared) {\n        clearDocsFolder(docsUrl);\n        docsFolderCleared = true;\n      }\n\n      const documentation = generateDocumentation(route);\n      const url = `${docsUrl}/${documentation.fileName}`;\n\n      writeFiles(url, documentation.fileContent);\n    }\n  });\n};\n\nconst start = ({\n  routes = [],\n  defaultPort = 3000,\n  docsUrl = path.resolve(process.cwd(), 'docs'),\n  headers = requestHeaders,\n}) => {\n  setupHeaders(headers);\n\n  app.use('/', createRouter(routes));\n  choosePort('0.0.0.0', defaultPort).then((port) => {\n    if (port == null) return;\n    app.listen(port, () => console.log(`🚀 App started on port: ${port}`.green)); // eslint-disable-line no-console\n  });\n\n  createDocs(routes, docsUrl);\n};\n\nmodule.exports = {\n  requestHeaders,\n  start,\n  ternary,\n};\n"],"names":["queryString","require","transformToTernary","obj","ternaryObject","merged","objs","getObj","iftrueTernary","iffalseTernary","result","length","concat","getHostQuery","req","hostQuery","host","headers","referer","url","index","indexOf","formatedHost","slice","parse","ternary","condition","iftrue","iffalse","Object","assign","customContoller","delay","res","typeofCustomController","response","body","params","query","data","Array","isArray","Error","setTimeout","json","Router","use","next","header","routes","forEach","route","formatedMethod","method","toLowerCase","controller","controllerProvider","e","parseObject","parsedObject","keys","key","value","type","parseArray","arr","parsedArray","firstItem","isPropMandatory","types","matches","possibleMatches","isMandatory","includes","getMandatoryFlag","flagIfYes","flagIfNo","findTypesObjects","filter","findTypesNoObjects","generateTypesWithMergedObjects","typesObjects","typesWithMergedObjects","JSONFromTernary","getJSONFromTernary","generateJSONValue","JSONValue","typesWithMergedObject","typesWithoutNullAndUndef","item","JSON","stringify","parseStringifiedObject","stringifiedObject","parsed","mergedKeys","push","mandatoryFlag","JSONKey","getParamsFromUrl","paramsFromUrl","split","param","replace","getDataFromArray","array","getArrayOfJSON","string","generateDocsFromArray","docs","language","content","generateDocsFromObject","queryArray","responseJSON","getFileName","fileName","toLocaleLowerCase","RegExp","fileContent","h1","title","description","blockquote","h2","p","toLocaleUpperCase","code","bodyParser","express","morgan","choosePort","json2md","fs","path","colors","app","requestHeaders","setupHeaders","headersArray","headerID","sendStatus","writeFiles","writeFile","err","console","log","red","clearDocsFolder","docsUrl","files","readdirSync","file","unlinkSync","join","createDocs","docsFolderCleared","documentation","generateDocumentation","start","defaultPort","resolve","process","cwd","createRouter","then","port","listen","green","module","exports"],"mappings":"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"}